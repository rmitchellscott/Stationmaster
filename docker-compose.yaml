version: '3.8'

services:
  stationmaster:
    build: .
    container_name: stationmaster
    restart: unless-stopped
    depends_on:
      postgres:
        condition: service_healthy
    ports:
      - "8000:8000"
    volumes:
      - ./data:/data
      - ./static:/app/static
    environment:
      # Database Configuration
      - DB_TYPE=postgres
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USER=${POSTGRES_USER:-stationmaster}
      - DB_PASSWORD=${POSTGRES_PASSWORD:-stationmaster_password}
      - DB_NAME=${POSTGRES_DB:-stationmaster}
      - DB_SSLMODE=disable
      - SKIP_AUTO_MIGRATION=true
      # Legacy DATABASE_URL for fallback
      - DATABASE_URL=${DATABASE_URL:-/data/stationmaster.db}
      - PUBLIC_REGISTRATION_ENABLED=${PUBLIC_REGISTRATION_ENABLED:-false}
      - JWT_SECRET=${JWT_SECRET:-change-this-in-production}
      - ADMIN_USERNAME=mitchell
      - ADMIN_PASSWORD=password
      - ADMIN_EMAIL=mitchell@example.com
      - PORT=8000
      - BLOCKED_DOMAINS=test.com
      # OIDC Configuration (optional)
      - OIDC_ENABLED=${OIDC_ENABLED:-false}
      - OIDC_ISSUER=${OIDC_ISSUER}
      - OIDC_CLIENT_ID=${OIDC_CLIENT_ID}
      - OIDC_CLIENT_SECRET=${OIDC_CLIENT_SECRET}
      - OIDC_REDIRECT_URI=${OIDC_REDIRECT_URI}
      - LOG_LEVEL=DEBUG
      - ALLOW_INSECURE=true
      # SMTP Configuration (optional)
      - SMTP_ENABLED=${SMTP_ENABLED:-false}
      - SMTP_HOST=${SMTP_HOST}
      - SMTP_PORT=${SMTP_PORT}
      - SMTP_USERNAME=${SMTP_USERNAME}
      - SMTP_PASSWORD=${SMTP_PASSWORD}
      - SMTP_FROM=${SMTP_FROM}
      # Proxy Auth (optional)
      - PROXY_AUTH_ENABLED=${PROXY_AUTH_ENABLED:-false}
      - PROXY_AUTH_HEADER=${PROXY_AUTH_HEADER:-X-Remote-User}
      - PROXY_AUTH_AUTO_CREATE=${PROXY_AUTH_AUTO_CREATE:-false}
      # Browserless Configuration
      - BROWSERLESS_URL=${BROWSERLESS_URL:-http://browserless:3000}

  # Browserless service for HTML rendering
  browserless:
    image: ghcr.io/browserless/chromium:latest
    container_name: stationmaster-browserless
    restart: unless-stopped
    environment:
      - CONCURRENT=2
      - MAX_QUEUE_LENGTH=10
      - TIMEOUT=30000
      - DEBUG=browserless:*
      - TZ=UTC
    ports:
      - "3000:3000"
    networks:
      - default

  # PostgreSQL database for performance
  postgres:
    image: postgres:16-alpine
    container_name: stationmaster-db
    restart: unless-stopped
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-stationmaster}
      - POSTGRES_USER=${POSTGRES_USER:-stationmaster}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-stationmaster_password}
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-stationmaster} -d ${POSTGRES_DB:-stationmaster}"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
